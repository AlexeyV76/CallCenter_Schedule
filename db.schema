--Производственный календарь
CREATE TABLE CAL(CAL_DATE text, CAL_WORKD text, CAL_PLAN_CALLS integer);

--Статистика
CREATE TABLE STATS(ST_CAL_ID integer, ST_PER_ST text, ST_PER_EN text, ST_VALUE integer);

--Персонал
CREATE TABLE PERSONS(PER_ID text UNIQUE, PER_F text, PER_I text, PER_O text, PER_DOL text CHECK (PER_DOL IN ("Супервизор", "Оператор", "Новичок")));

--Отношение персонала к производственному календарю
CREATE TABLE P2C(PER_ID text, CAL_DATE text, P2C_HOL integer);

--Смены
CREATE TABLE TURN(CAL_DATE text, TURN_START text, PER_ID text, TURN_MAIL integer);

--Таблица для составления расписания
CREATE TABLE PER_PLAN(PER_PLAN_MONTH text, PER_ID text, PER_PL_MAX integer, PER_PL_REM integer, PER_PL_LAST_END text);

--Представление с полной информацией по календарю
CREATE VIEW CAL_V1(CAL_DATE, CAL_YEAR, CAL_MON, CAL_DOFM, CAL_WEEK, CAL_DOFW, CAL_DOFW_TXT, CAL_WEEKEND, CAL_WORKD, CAL_PLAN_CALLS) AS
  SELECT CAL_DATE, strftime("%Y", CAL_DATE) CAL_YEAR, strftime("%m", CAL_DATE) CAL_MON, strftime("%d", CAL_DATE) CAL_DOFM, strftime("%W", CAL_DATE) CAL_WEEK,
    CASE 
      WHEN strftime("%w", CAL_DATE) = "0" THEN 7
    ELSE
      CAST(strftime("%w", CAL_DATE) AS integer)
    END,
    CASE
      WHEN strftime("%w", CAL_DATE) = "0" THEN "ВС"
      WHEN strftime("%w", CAL_DATE) = "1" THEN "ПН"
      WHEN strftime("%w", CAL_DATE) = "2" THEN "ВТ"
      WHEN strftime("%w", CAL_DATE) = "3" THEN "СР"
      WHEN strftime("%w", CAL_DATE) = "4" THEN "ЧТ"
      WHEN strftime("%w", CAL_DATE) = "5" THEN "ПТ"
    ELSE
      "СБ"
    END,
    CASE
      WHEN (strftime("%w", CAL_DATE) = "0" OR strftime("%w", CAL_DATE) = "6") THEN 1
    ELSE
      0
    END,
    CAL_WORKD, CAL_PLAN_CALLS
  FROM CAL
  ORDER BY CAL_YEAR, CAL_MON, CAL_DOFM;

--Представление с полной информацией по персоналу
CREATE VIEW PERSONS_FULL(PER_OID, PER_ID, PER_FIO, PER_DOL, PER_F, PER_I, PER_O) AS
  SELECT OID, PER_ID, PER_F||" "||PER_I||" "||PER_O, PER_DOL, PER_F, PER_I, PER_O
  FROM PERSONS
  ORDER BY PER_F, PER_I, PER_O;

--Представление с полной информацией о сменах
CREATE VIEW TURN_FULL(OID, DATE, YEAR, MON, DAY, DAYW, WKEND, WORKD, TS, PER, MAIL) AS
SELECT T.OID, T.CAL_DATE, C.CAL_YEAR, C.CAL_MON, C.CAL_DOFM, C.CAL_DOFW, C.CAL_WEEKEND, C.CAL_WORKD, T.TURN_START, T.PER_ID, T.TURN_MAIL
FROM TURN T
JOIN CAL_V1 C ON T.CAL_DATE = C.CAL_DATE
ORDER BY C.CAL_YEAR, C.CAL_MON, C.CAL_DOFM, T.TURN_START, T.TURN_MAIL;

--Представление со сменами которые еще не заполнены
CREATE VIEW TURN_FULL_TO_FILL(OID, DATE, YEAR, MON, DAY, DAYW, WKEND, WORKD, TS, PER, MAIL) AS
SELECT *
FROM TURN_FULL
WHERE
    PER is NULL OR
    PER = "";

--Представление агрегирующее информацию по сменам
CREATE VIEW TURN_AGR(CAL_MON, TURN_START, Q, WORKD, TURN_MAIL) AS
SELECT C1.CAL_MON, T.TURN_START, COUNT(T.TURN_START)/(SELECT COUNT(C2.CAL_DATE) FROM CAL_V1 C2 WHERE (C2.CAL_WORKD="1") AND (C2.CAL_YEAR=C1.CAL_YEAR) AND (C2.CAL_MON=C1.CAL_MON)), 1, 0
FROM TURN T
JOIN CAL_V1 C1 ON T.CAL_DATE=C1.CAL_DATE
WHERE (C1.CAL_WORKD="1") AND (T.TURN_MAIL=0)
GROUP BY C1.CAL_MON, T.TURN_START
UNION ALL
SELECT C1.CAL_MON, T.TURN_START, COUNT(T.TURN_START)/(SELECT COUNT(C2.CAL_DATE) FROM CAL_V1 C2 WHERE (C2.CAL_WORKD="1") AND (C2.CAL_YEAR=C1.CAL_YEAR) AND (C2.CAL_MON=C1.CAL_MON)), 1, 1
FROM TURN T
JOIN CAL_V1 C1 ON T.CAL_DATE=C1.CAL_DATE
WHERE (C1.CAL_WORKD="1") AND (T.TURN_MAIL=1)
GROUP BY C1.CAL_MON, T.TURN_START
UNION ALL
SELECT C1.CAL_MON, T.TURN_START, COUNT(T.TURN_START)/(SELECT COUNT(C2.CAL_DATE) FROM CAL_V1 C2 WHERE (C2.CAL_WORKD="0") AND (C2.CAL_YEAR=C1.CAL_YEAR) AND (C2.CAL_MON=C1.CAL_MON)), 0, 0
FROM TURN T
JOIN CAL_V1 C1 ON T.CAL_DATE=C1.CAL_DATE
WHERE (C1.CAL_WORKD="0") AND (T.TURN_MAIL=0)
GROUP BY C1.CAL_MON, T.TURN_START
UNION ALL
SELECT C1.CAL_MON, T.TURN_START, COUNT(T.TURN_START)/(SELECT COUNT(C2.CAL_DATE) FROM CAL_V1 C2 WHERE (C2.CAL_WORKD="0") AND (C2.CAL_YEAR=C1.CAL_YEAR) AND (C2.CAL_MON=C1.CAL_MON)), 0, 1
FROM TURN T
JOIN CAL_V1 C1 ON T.CAL_DATE=C1.CAL_DATE
WHERE (C1.CAL_WORKD="0") AND (T.TURN_MAIL=1)
GROUP BY C1.CAL_MON, T.TURN_START;

--Представление с полной информацией отношения персонала к производственному календарю
CREATE VIEW P2C_FULL(PER, CAL_DATE, P2C_HOL, DOL, FIO, YEAR, MON, D, DOFW, WKND, WRKD, PL_CALLS) AS
SELECT P2C.PER_ID, P2C.CAL_DATE, P2C.P2C_HOL, P.PER_DOL, P.PER_FIO, C.CAL_YEAR, C.CAL_MON, C.CAL_DOFM, C.CAL_DOFW, C.CAL_WEEKEND, C.CAL_WORKD, C.CAL_PLAN_CALLS
FROM P2C
JOIN PERSONS_FULL P ON P.PER_ID=P2C.PER_ID
JOIN CAL_V1 C ON C.CAL_DATE=P2C.CAL_DATE;

CREATE VIEW PER_PLAN_FULL(PLAN_MON, PER, PER_DOL, PL_MAX, PL_REM, PL_DIF, LAST_END, CAL_DATE, P2C_HOL, FIO, YEAR, D) AS
SELECT PP.PER_PLAN_MONTH, PP.PER_ID, P.DOL, PP.PER_PL_MAX, PP.PER_PL_REM, (PP.PER_PL_MAX-PP.PER_PL_REM), PP.PER_PL_LAST_END, P.CAL_DATE, P.P2C_HOL, P.FIO, P.YEAR, P.D
FROM PER_PLAN PP
JOIN P2C_FULL P ON PP.PER_ID=P.PER;

CREATE VIEW STATS_CALC(HOUR, CALLS, DAYS, AVERAGE, WORKD) AS
  SELECT ST_PER_ST_H C1, SUM(ST_VALUE) C2, COUNT(ST_PER_ST_H) C3, TOTAL(ST_VALUE)/COUNT(ST_PER_ST_H) C4, 1 C5
  FROM STATS_H
  WHERE (ST_CAL_WORKD=1) AND (CAST(ST_PER_ST_H AS integer)>4) AND (CAST(ST_PER_ST_H AS integer)<23)
  GROUP BY ST_PER_ST_H
  UNION
  SELECT ST_PER_ST_H, SUM(ST_VALUE), COUNT(ST_PER_ST_H), TOTAL(ST_VALUE)/COUNT(ST_PER_ST_H), 0
  FROM STATS_H
  WHERE (ST_CAL_WORKD=0) AND (CAST(ST_PER_ST_H AS integer)>4) AND (CAST(ST_PER_ST_H AS integer)<23)
  GROUP BY ST_PER_ST_H
  ORDER BY 5;

CREATE VIEW STATS_H(OID, ST_CAL_ID, ST_CAL_YEAR, ST_CAL_MON, ST_CAL_DOFM, ST_CAL_DOFW, ST_CAL_WEEKEND, ST_CAL_WORKD, ST_PER_ST_H, ST_PER_ST_M, ST_PER_EN_H, ST_PER_EN_M, ST_VALUE) AS
  SELECT S.OID OID, S.ST_CAL_ID ST_CAL_ID, C.CAL_YEAR ST_CAL_YEAR, C.CAL_MON ST_CAL_MON, C.CAL_DOFM ST_CAL_DOFM, C.CAL_DOFW ST_CAL_DOFW, C.CAL_WEEKEND ST_CAL_WEEKEND, C.CAL_WORKD ST_CAL_WORKD, strftime("%H", S.ST_PER_ST) ST_PER_ST_H, strftime("%M", S.ST_PER_ST) ST_PER_ST_M, strftime("%H", S.ST_PER_EN) ST_PER_EN_H, strftime("%M", S.ST_PER_EN) ST_PER_EN_M, S.ST_VALUE ST_VALUE
  FROM STATS AS S
  INNER JOIN CAL_V1 AS C
  ON S.ST_CAL_ID=C.CAL_DATE
  ORDER BY ST_CAL_YEAR, ST_CAL_MON, ST_CAL_DOFM, ST_PER_ST_H, ST_PER_ST_M;